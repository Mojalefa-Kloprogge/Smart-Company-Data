trigger: none
jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-latest'
    continueOnError: false
    timeoutInMinutes: 20
    container: salesforce/salesforcedx:latest-full

    variables:
      - group: 2MD_PROD
      - name: SFDX_LOGIN_URL
        value: $[variables.SFDX_AUTH_URL]
      - name: scratchOrgUsername
        value: initialValue

    steps:
        - template: templates/login.yml
        - bash: |
            echo 'y' | sfdx plugins:install sfpowerkit
          displayName: Install sfpowerkit
        - bash: |
            ORGNAME=$(tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c10)
            sfdx force:org:create -s -f config/project-scratch-def.json -a $ORGNAME -d 3 -w 10
            echo "##vso[task.setvariable variable=scratchOrgName]$ORGNAME"
          displayName: Create Scratch Org
        - bash: |
            sfdx force:package:version:create -f config/project-scratch-def.json --package SmartCompanyDataV3 --path force-app --installationkey 2ManyDigits --wait 20 || exit 1
            latestVersion=$(sfdx force:package:version:list -p SmartCompanyDataV3 -o CreatedDate --concise | tail -1 | awk '{print $3}')
            sfdx force:package:install --wait 10 --publishwait 10 --package $latestVersion -u $(scratchOrgName) --installationkey 2ManyDigits --noprompt
          displayName: "Push Source to Scratch Org"
        - bash:
            sfdx force:user:password:generate -u $(scratchOrgName)
          displayName: Generate Password
        - bash: |
            USERNAME=$(sfdx force:user:display -u $(scratchOrgName) --json | jq -r '.result.username')
            echo "##vso[task.setvariable variable=scratchOrgUsername]$USERNAME"

            PASSWORD=$(sfdx force:user:display -u $(scratchOrgName) --json | jq -r '.result.password')
            echo "##vso[task.setvariable variable=scratchOrgPassword]$PASSWORD"

            LOGINURL=$(sfdx force:user:display -u $(scratchOrgName) --json | jq -r '.result.loginUrl')
            echo "##vso[task.setvariable variable=scratchOrgLoginUrl]$LOGINURL"
          displayName: Retrieve Username and Password
        - bash: |
            generate_post_data()
            {
              cat <<EOF
            {
              "comments": [
                {"parentCommentId": 0,
                "content": "| USERNAME | PASSWORD | URL |  
            |-----------|:-----------:|-----------:|  
            | $(scratchOrgUsername) | $(scratchOrgPassword) | $(scratchOrgLoginUrl) |  ",
                 "commentType": "system"
                }
              ],
              "status": "active"
            }
            EOF
            }
            curl -X POST -H "Authorization: Bearer $(System.AccessToken)" -H "Content-Type: application/json" -d "$(generate_post_data)" https://dev.azure.com/2manydigits/2ManyDigits/_apis/git/repositories/72c55da2-b13b-4c41-a322-4b0ae383f697/pullRequests/$(System.PullRequest.PullRequestId)/threads?api-version=6.0
          displayName: Post comment on PR



        # - bash: build/scripts/package/latest-version.sh
        #   env:
        #     ACC_LOGIN_URL: "$(ACC_LOGIN_URL)"
        #   displayName: Get Latest Package Version

        #